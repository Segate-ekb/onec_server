name: Test 1C Server on Multiple Platform Versions

on:
  push:
    branches:
      - main  # или ваша основная ветка
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false  # Продолжать выполнение всех вариантов, даже если один из них провалился
      matrix:
        onec_version:
          - '8.3.22.2557'
          - '8.3.24.1548'
          - '8.3.25.1445'

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}

    - name: Build Docker image for version ${{ matrix.onec_version }}
      run: docker build --build-arg ONEC_VERSION=${{ matrix.onec_version }} -t onec-server:${{ matrix.onec_version }} .

    - name: Run Docker container for version ${{ matrix.onec_version }}
      env:
        ONEC_USERNAME: ${{ secrets.ONEC_USERNAME }}
        ONEC_PASSWORD: ${{ secrets.ONEC_PASSWORD }}
      run: |
        docker run -d --name onec-server-test-${{ matrix.onec_version }} \
          -e ONEC_USERNAME \
          -e ONEC_PASSWORD \
          -e ONEC_VERSION=${{ matrix.onec_version }} \
          -p 1540:1540 \
          -p 1541:1541 \
          onec-server:${{ matrix.onec_version }}

    - name: Wait for server to start for version ${{ matrix.onec_version }}
      run: |
        echo "Waiting for RAGENT process to start for version ${{ matrix.onec_version }}..."
        for i in {1..60}; do
          sleep 5
          if docker exec onec-server-test-${{ matrix.onec_version }} pgrep ragent > /dev/null; then
            echo "RAGENT process is running for version ${{ matrix.onec_version }}."
            break
          fi
          if [ $i -eq 60 ]; then
            echo "Timeout waiting for RAGENT process for version ${{ matrix.onec_version }}."
            docker logs onec-server-test-${{ matrix.onec_version }}
            exit 1
          fi
        done

    - name: Check RAGENT process for version ${{ matrix.onec_version }}
      run: |
        if docker exec onec-server-test-${{ matrix.onec_version }} pgrep ragent > /dev/null; then
          echo "RAGENT process is running for version ${{ matrix.onec_version }}."
        else
          echo "RAGENT process is not running for version ${{ matrix.onec_version }}."
          docker logs onec-server-test-${{ matrix.onec_version }}
          exit 1
        fi

    - name: Check listening ports for version ${{ matrix.onec_version }}
      run: |
        required_ports=(1540 1541)
        for port in "${required_ports[@]}"; do
          if docker exec onec-server-test-${{ matrix.onec_version }} ss -tnlp | grep ":$port " > /dev/null; then
            echo "Port $port is listening for version ${{ matrix.onec_version }}."
          else
            echo "Port $port is not listening for version ${{ matrix.onec_version }}."
            docker logs onec-server-test-${{ matrix.onec_version }}
            exit 1
          fi
        done

    - name: Clean up for version ${{ matrix.onec_version }}
      run: docker rm -f onec-server-test-${{ matrix.onec_version }}
